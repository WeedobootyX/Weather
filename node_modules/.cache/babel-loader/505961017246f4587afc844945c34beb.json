{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\weather\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { withRouter, Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { objectIsEmpty } from './shared/utility';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\nimport Layout from './hoc/Layout/Layout';\nimport PublicHomePage from './containers/PublicHomePage/PublicHomePage';\nimport * as actions from './store/actions/index';\nimport './App.css'; // Lazyload components with our hoc\n\nconst asyncWeatherInfo = asyncComponent(() => {\n  return import('./components/WeatherInfo/WeatherInfo');\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let routes = /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/weather-info\",\n      exact: true,\n      component: asyncWeatherInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      component: PublicHomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }));\n    return /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, routes);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["C:/git/weather/src/App.js"],"names":["React","Component","withRouter","Switch","Route","connect","objectIsEmpty","asyncComponent","Layout","PublicHomePage","actions","asyncWeatherInfo","App","constructor","props","render","routes","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,KAA7B,QAA0C,kBAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,cAAP,MAA2B,4CAA3B;AAEA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AAEA,OAAO,WAAP,C,CAEA;;AACA,MAAMC,gBAAgB,GAAGJ,cAAc,CAAC,MAAM;AAC5C,SAAO,OAAO,sCAAP,CAAP;AACD,CAFsC,CAAvC;;AAIA,MAAMK,GAAN,SAAkBX,SAAlB,CAA2B;AAEzBY,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,MAAM,GAAE;AAEN,QAAIC,MAAM,gBACR,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,eAAZ;AAA4B,MAAA,KAAK,MAAjC;AAAkC,MAAA,SAAS,EAAEL,gBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAd;AAAkB,MAAA,SAAS,EAAGF,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAOA,wBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGO,MADH,CADF;AAMD;;AArBwB;;AAwB3B,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO,EAAP;AAED,CAHD;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO,EAAP;AAED,CAHD;;AAKA,eAAelB,UAAU,CAACG,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CP,GAA7C,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter, Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux'; \n\nimport { objectIsEmpty } from './shared/utility'; \nimport asyncComponent from './hoc/asyncComponent/asyncComponent'; \n\nimport Layout from './hoc/Layout/Layout'; \n\nimport PublicHomePage from './containers/PublicHomePage/PublicHomePage'; \n\nimport * as actions from './store/actions/index'; \n\nimport './App.css';\n\n// Lazyload components with our hoc\nconst asyncWeatherInfo = asyncComponent(() => {\n  return import('./components/WeatherInfo/WeatherInfo');\n});\n\nclass App extends Component{\n\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n\n    let routes = (\n      <Switch>\n        <Route path='/weather-info' exact component={asyncWeatherInfo} />\n        <Route path = '/' component={ PublicHomePage }/>\n      </Switch>\n    );\n\n    return (\n      <Layout>\n        {routes}\n      </Layout>\n    );\n\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));"]},"metadata":{},"sourceType":"module"}