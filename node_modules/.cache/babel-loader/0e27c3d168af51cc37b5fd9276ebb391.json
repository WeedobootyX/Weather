{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\weather\\\\src\\\\containers\\\\WeatherInfo\\\\WeatherInfo.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport * as classes from './WeatherInfo.module.css';\n\nclass PeopleCounter extends Component {\n  constructor(props) {\n    super(props);\n    const siteKey = \"polypod\";\n    const deviceKey = \"arduino-nano-33-iot\";\n    const sensorKey = \"rain\";\n    this.props.getPeriodSensorValues(siteKey, deviceKey, sensorKey);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.WeatherInfoContainer,\n      id: \"weatherInfoContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }, \"There will be weather information here\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    values: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPeriodSensorValues: (siteKey, deviceKey, sensorKey) => dispatch(actions.getPeriodSensorValues(siteKey, deviceKey, sensorKey))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherInfo);","map":{"version":3,"sources":["C:/git/weather/src/containers/WeatherInfo/WeatherInfo.js"],"names":["React","Component","connect","actions","classes","PeopleCounter","constructor","props","siteKey","deviceKey","sensorKey","getPeriodSensorValues","render","WeatherInfoContainer","mapStateToProps","state","values","mapDispatchToProps","dispatch","WeatherInfo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAqC;AAEpCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,UAAMC,OAAO,GAAG,SAAhB;AACA,UAAMC,SAAS,GAAG,qBAAlB;AACA,UAAMC,SAAS,GAAG,MAAlB;AACA,SAAKH,KAAL,CAAWI,qBAAX,CAAiCH,OAAjC,EAA0CC,SAA1C,EAAqDC,SAArD;AACA;;AAEDE,EAAAA,MAAM,GAAE;AACP,wBACC;AAAK,MAAA,SAAS,EAAGR,OAAO,CAACS,oBAAzB;AAAgD,MAAA,EAAE,EAAC,sBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADD,CADD;AAKA;;AAhBmC;;AAmBrC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAClC,SAAO;AACNC,IAAAA,MAAM,EAAED;AADF,GAAP;AAGA,CAJD;;AAMA,MAAME,kBAAkB,GAAIC,QAAD,IAAe;AACzC,SAAO;AACNP,IAAAA,qBAAqB,EAAE,CAACH,OAAD,EAAUC,SAAV,EAAqBC,SAArB,KAAmCQ,QAAQ,CAACf,OAAO,CAACQ,qBAAR,CAA8BH,OAA9B,EAAuCC,SAAvC,EAAkDC,SAAlD,CAAD;AAD5D,GAAP;AAGA,CAJD;;AAMA,eAAeR,OAAO,CAACY,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CE,WAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'; \r\nimport { connect } from 'react-redux'; \r\n\r\nimport * as actions from '../../store/actions/index'; \r\n\r\nimport * as classes from './WeatherInfo.module.css'; \r\n\r\nclass PeopleCounter extends Component{\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tconst siteKey = \"polypod\";\r\n\t\tconst deviceKey = \"arduino-nano-33-iot\"; \r\n\t\tconst sensorKey = \"rain\";\r\n\t\tthis.props.getPeriodSensorValues(siteKey, deviceKey, sensorKey);\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className={ classes.WeatherInfoContainer } id=\"weatherInfoContainer\">\t\r\n\t\t\t\t<p>There will be weather information here</p>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tvalues: state\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)  => {\r\n\treturn {\r\n\t\tgetPeriodSensorValues: (siteKey, deviceKey, sensorKey) => dispatch(actions.getPeriodSensorValues(siteKey, deviceKey, sensorKey))\t\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherInfo);\r\n "]},"metadata":{},"sourceType":"module"}